EventId,EventTemplate,Occurrences
E1,*** register callback for <*>@<*>,1
E10,"acquire lock=<*>, flags=<*>, tag=""<*>"", name=<*>, ws=<*>, uid=<*>, pid=<*>",26
E100,"printFreezingDisplayLogsopening app wtoken = AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*>/.<*> t761}}}, allDrawn= false, startingDisplayed =  false, startingMoved =  false, isRelaunching =  false",1
E101,Process <*>:qzone (pid <*>) has died,1
E102,querySoundEffectsEnabled...,17
E103,"ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=<*>,auto=<*>,adj=<*>.0userId=<*>",199
E104,received broadcast <*>,4
E105,Received TIME_TICK alarm; rescheduling,3
E106,RefreshBatteryInfo isBatteryLow: <*>,2
E107,registerCallback not in UI.,3
E108,"release:lock=<*>, flg=<*>, tag=""<*>"", name=<*>, ws=<*>, uid=<*>, pid=<*>",26
E109,"Releasing suspend blocker ""PowerManagerService.WakeLocks"".",33
E11,"Acquiring suspend blocker ""PowerManagerService.WakeLocks"".",33
E110,remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching,2
E111,removeNotification:<*>|<*>|<*>|null|<*>,2
E112,removeNotificationChildren,12
E113,resumeSuspendedAutohide,10
E114,"rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED",3
E115,schedulePeek,1
E116,scheduleTimeTickEvent triggerAtTime = <*>,3
E117,Scheduling restart of crashed service <*>.<*> in <*>,1
E118,Screen frozen for <*> due to Window{<*> u0 <*>.<*>},1
E119,"sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}},repeatInterval = <*>,listenerTag =null",2
E12,ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*>,1
E120,"sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}},repeatInterval = <*>,listenerTag =time_tick",3
E121,Sending non-protected broadcast <*> from system <*>:<*> pkg <*>,2
E122,"setDataSource(<*>, <*>, <*>)",1
E123,setLightsOn(true),181
E124,setSpeakerphoneOn  on: true,1
E125,setSpeakerphoneOn on:true,1
E126,"setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)",200
E127,setWiredDeviceConnectionState  type: <*>  state: <*>,2
E128,shouldBlockLocation  ret:false,33
E129,shouldBlockLocation  ret:true,4
E13,ACTION_BATTERY_CHANGED pluggedType: <*>,1
E130,shouldBlockLocation running ...,37
E131,Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*>}}} -- going to hide,4
E132,"Skipping, withExcluded: false, tr.intent:Intent { act=<*> dat=<*> flg=<*> cmp=<*> (has extras) }",7
E133,"Skipping, withExcluded: false, tr.intent:Intent { act=<*> dat=<*> typ=<*> flg=<*> cmp=<*> (has extras) }",7
E134,"Skipping, withExcluded: false, tr.intent:Intent { act=<*> flg=<*> cmp=<*> (has extras) }",14
E135,"Skipping, withExcluded: false, tr.intent:Intent { flg=<*> cmp=<*> (has extras) }",21
E136,"Skipping, withExcluded: false, tr.intent:Intent { flg=<*> cmp=<*> bnds=<*> }",14
E137,"Start dump, calling from : pid=<*>, uid=<*>",1
E138,Start proc <*>:<*>:qzone<*> for service <*>.<*>,1
E139,START u0 {act=<*> cat=[<*>] flg=<*> cmp=<*> bnds=<*>} from uid <*> on display <*>,2
E14,"ACTIVITY check resid: <*>, size=<*>",2
E140,START u0 {act=<*> flg=<*> cmp=<*> (has extras)} from uid <*> on display <*>,1
E141,START u0 {flg=<*> cmp=<*> (has extras)} from uid <*> on display <*>,1
E142,startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=<*> cmp=<*> (has extras) },1
E143,startAnimation begin,1
E144,startAnimation end,1
E145,"state.clipTopAmount:<*>, i:<*>",13
E146,stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>,6
E147,stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false,6
E148,suspendAutohide,23
E149,"Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[false], rot:[<*>]",4
E15,"ActivityManagerService,attachApplication,callingPid = <*>",4
E150,The change in focus caused us to need to do a layout begin,6
E151,The change in focus caused us to need to do a layout end,6
E152,Unable to start service Intent { act=<*> cmp=<*>.<*> } U=<*>: not found,1
E153,unregisterAudioFocusListener...,1
E154,updateChargingLocked: charging=false,1
E155,"updateClipping isOverlap:false, getTopPadding=<*>.<*>, Translation=<*>.<*>",52
E156,"updateClipping isOverlap:true, getTopPadding=<*>.<*>, Translation=<*>.<*>",13
E157,updateDimmedActivatedHideSensitive overlap:false,52
E158,updateDimmedActivatedHideSensitive overlap:true,13
E159,"updateIsPoweredLocked: wasPowered=false, mIsPowered=false, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>",1
E16,"ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*>",4
E160,"updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?false",2
E161,"updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true",4
E162,"updateLightsLocked,turn off notificationLight",6
E163,"updateNotificationShade: total=<*>, active=<*>",13
E164,"userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>",69
E165,visible is <*>,3
E166,visible is <*> gt <*>,2
E17,addNotification key=<*>|<*>|<*>|null|<*>,2
E18,"animateCollapsePanels:flags=<*>, force=false, delayed=false, mExpandedVisible=false",5
E19,"animateCollapsePanels:flags=<*>, force=false, delayed=false, mExpandedVisible=true",1
E2,*** unregister callback for <*>@<*>,1
E20,"animateCollapsePanels:flags=<*>, force=true, delayed=true, mExpandedVisible=true",2
E21,"Animating brightness: target=<*>, rate=<*>",85
E22,"Application requested orientation <*>, got rotation <*> which has compatible metrics",3
E23,applyOptionsLocked: Unknown animationType=<*>,2
E24,ApStaDisabledState what=<*>,1
E25,Bad activity token: <*>@<*>,1
E26,battery changed pluggedType: <*>,1
E27,cancelAutohide,15
E28,"cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*>",2
E29,"cancelNotification,index:<*>",23
E3,*** unregister callback for null,1
E30,"cancelNotificationLocked called,tell the app,reason = <*>",2
E31,"cancelNotificationLocked,remove =<*>",2
E32,cancelNotificationLocked:<*>|<*>|<*>|null|<*>,2
E33,"cancelNotificationWithTag pid <*>,uid = <*>,tag = null,pkg =<*>,id =<*>",20
E34,cancelPeek: false,20
E35,ChargingSpeed  Wattage: <*> ST: <*> --> <*>,1
E36,cleanUpApplicationRecord -- <*>,6
E37,"cleanUpApplicationRecordLocked, pid: <*>, restart: false",6
E38,"cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>",6
E39,closeQs,12
E4,"[HSM] stayAwake false uid: <*>, pid: <*>",1
E40,DefaultState what=<*>,1
E41,Destroying surface Surface(name=<*>) called by <*>,25
E42,disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >,3
E43,disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >,3
E44,enqueueNotificationInternal: n.getKey = <*>,2
E45,enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=[<*>] sound=null tick defaults=<*> flags=<*> color=<*> category=msg vis=PRIVATE),1
E46,enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=[<*>] sound=null tick defaults=<*> flags=<*> color=<*> vis=PRIVATE),1
E47,"flingToHeight: vel=<*>.<*>, expand=false, target=<*>.<*>, collapseSpeedUpFactor=<*>.<*>, expandBecauseOfFalsing=false",1
E48,"flingToHeight: vel=<*>.<*>, expand=true, target=<*>.<*>, collapseSpeedUpFactor=<*>.<*>, expandBecauseOfFalsing=false",1
E49,getAllCellInfo is blocked by permission manager . callingPackage = <*>,3
E5,[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*>,1
E50,getCellLocation is blocked by permission manager uid:<*> pid:<*>,1
E51,getDevicesForStream  streamType: <*>,2
E52,getLastAudibleStreamVolume  treamType: <*>,9
E53,getMode...,1
E54,getNeighboringCellInfo calling app is <*>,5
E55,"getRecentTasks: num=<*>,flags=<*>,totalTasks=<*>",14
E56,getRecentTasks: topActivity=ComponentInfo{<*><*>.<*>},14
E57,getRingerMode...,3
E58,getRingtonePlayer...,2
E59,getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output,81
E6,[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=true,1
E60,getStreamVolume  treamType: <*>,1
E61,getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output,37
E62,handleBatteryUpdate,1
E63,handleTimeUpdate,3
E64,HBM brightnessIn =<*>,85
E65,HBM brightnessOut =<*>,85
E66,instantCollapse,9
E67,"interceptKeyBeforeQueueing: key <*> , result : <*>",14
E68,interceptKeyTq keycode=<*> interactive=true keyguardActive=false policyFlags=<*> down false canceled false,7
E69,interceptKeyTq keycode=<*> interactive=true keyguardActive=false policyFlags=<*> down true canceled false,7
E7,<*>: <*> cannot be cast to <*>$Token,1
E70,isBluetoothA2dpOn...,1
E71,isBluetoothScoOn...,1
E72,isMusicActive...,12
E73,isSimPinSecure mSimDatas is null or empty,1
E74,isWiredHeadsetOn...,1
E75,Killing <*>:<*><*> (adj <*>): empty for <*>,1
E76,logNotificationVisibilityChanges runInThread over,6
E77,logNotificationVisibilityChanges runInThread start,6
E78,makeExpandedInvisible: mExpandedVisible=false,1
E79,makeExpandedInvisible: mExpandedVisible=true,3
E8,<*>: Must execute in UI,3
E80,Marking notification as seen <*>|<*>|<*>|null|<*>,2
E81,mHeadsUpExistenceChangedRunnable,4
E82,mVisiblity.getValue is false,5
E83,"new Process app=ProcessRecord{<*> <*>:<*>:qzone<*>}, name: <*>:qzone, euid: <*>",1
E84,"notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>",19
E85,onExpandingFinished,2
E86,onExpandingStarted,2
E87,"onInterceptTouchEvent MotionEvent { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=false",2
E88,"onInterceptTouchEvent MotionEvent { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=false",2
E89,onNotificationClick called,2
E9,abandonAudioFocus,1
E90,onNotificationExpansionChanged called,2
E91,onNotificationVisibilityChanged called,6
E92,"onReceive, action:<*>",1
E93,"onTouchEvent::<*>, x=<*>.<*>, y=<*>.<*>",2
E94,onTrackingStarted,1
E95,onTrackingStopped: true,1
E96,"orientation change is complete, call stopFreezingDisplayLocked",1
E97,"overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():<*>",13
E98,Pid:<*> MediaPlayer destructor,1
E99,playSoundEffect   effectType: <*>,10
